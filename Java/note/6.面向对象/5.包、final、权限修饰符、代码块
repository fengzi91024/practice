### 什么是包？

> 包就是文件夹。用来管理各种不同功能的Java类，方便后期代码维护。

- 包名的规则：公司域名反写+包的作用，需要全部英文小写，见名知意。

### 使用其他类的规则

全类名：`包名+类名  变量名 = new  包名+类名();`

- 使用同一个包中的类时，不需要导包。
- 使用Java.lang 包中的类时，不需要导包。
- 其他情况都需要导包
- 如歌同时使用两个包中同名类，需要使用全类名。



---

### final 修饰符

- 方法
    - 表示该方法是最终方法，不被重写
- 类
    - 表示该类是最终类，不被继承
- 变量
    - 表示常量，只能被赋值一次

### 常量

- 实际开发中，常量一般作为系统的配置信息，方便维护，提高可读性。
- 常量的命名规则：
    - 单个单词：全部大写
    - 多个单词：全部大写，单词之间用下划线隔开
- final 修饰的变量是基本类型：那么变量存储的数据值不能发生改变。

- fianl 修饰的变量是引用类型： 那么变量存储的地址值不能发生改变，对象内部的可以改变。

---

### 权限修饰符

- 权限修饰符：是用来控制一个成员能够被访问的范围
- 可以稀释成员变量，方法、构造方法、内部类。

![image-20231113165721657](\Java\note\image\权限修饰.png)

- private 私有
- 空着不写（默认）
- protected 受保护
- public 公共

权限修饰符的使用规则

实际开发中，一般只用private 和 public

- 成员变量私有
- 方法公开

特列：如果方法中的代码是抽取其他方法中共性代码，这个方法一般也私有。

---

### 代码块

- ![image-20231113171940131](E:\Java\note\image\局部代码块.png)
- 提前结束变量的生命周期

- ![image-20231113171823039](E:\Java\note\image\构造代码块.png)
- 抽取构造方法的重复代码

- ![](E:\Java\note\image\静态代码块.png)





